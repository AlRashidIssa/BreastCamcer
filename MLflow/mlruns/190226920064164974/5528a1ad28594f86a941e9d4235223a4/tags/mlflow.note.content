## Breast Cancer Prediction MLflow Project

### Project Overview

This MLflow project is designed to build and evaluate various machine learning models for breast cancer prediction. Utilizing the MLflow framework, this project manages the entire machine learning lifecycle, including data ingestion, model training, parameter logging, and result tracking. The goal is to predict breast cancer outcomes based on various input features using a range of classifiers, such as Logistic Regression, Support Vector Machines (SVM), Decision Trees, Random Forests, K-Nearest Neighbors, Naive Bayes, and Gradient Boosting models.

### Key Features

- **Data Handling**: Ingests and preprocesses breast cancer datasets. Supports CSV file input.
- **Model Training**: Provides implementations for multiple machine learning models.
- **Model Evaluation**: Trains models and saves them along with their parameters.
- **Artifact Logging**: Uses MLflow to log datasets, trained models, and model parameters.
- **Custom Logging**: Incorporates detailed custom logging for debugging and tracking.

### Project Structure

- `data/`: Directory for storing dataset files.
- `models/`: Directory where trained models are saved.
- `src/`: Contains source code for model implementations, training scripts, and utility functions.
- `MLproject`: MLflow project configuration file specifying entry points and dependencies.
- `conda.yaml`: Conda environment file listing project dependencies.
- `requirements.txt`: Python package dependencies.
- `README.md`: Provides an overview and instructions for the project.

### Getting Started

1. **Setup**:
   - Create a conda environment using `conda env create -f conda.yaml`.
   - Activate the environment with `conda activate breast_cancer_mlflow_env`.

2. **Running the Project**:
   - To train a model, run: `mlflow run . -P model_name=<ModelName> -P data_path=<PathToData> -P model_path=<PathToSaveModel>`.
   - Replace `<ModelName>`, `<PathToData>`, and `<PathToSaveModel>` with appropriate values.

3. **Logging**:
   - Models and parameters are automatically logged using MLflow during training.
   - Check the MLflow UI to monitor experiments, parameters, and results.

### Models Supported

- **Logistic Regression**: A linear model for binary classification.
- **Support Vector Machine (SVC)**: A model for classification tasks using a hyperplane.
- **Decision Tree**: A tree-based model for classification.
- **Random Forest**: An ensemble method using multiple decision trees.
- **K-Nearest Neighbors (KNN)**: A non-parametric method for classification based on distance metrics.
- **Naive Bayes**: A probabilistic classifier based on Bayes' theorem.
- **Gradient Boosting**: An ensemble technique that builds models sequentially to correct errors.

### Contact

For more details, please contact AlRashid Issa Alkiswane. You can also refer to the github:https://github.com/AlRashidIssa/BreastCamcer for more information.
